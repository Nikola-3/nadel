name: schema transformation is applied
enabled:
  current: true
  nextgen: true
overallSchema:
  MyService: |
    type Query {
      hello: World
    }
    type World {
      id: ID
      name: String
    }
    type Mutation {
      hello: String
    }
    type Subscription {
      onWorldUpdate: World
      onAnotherUpdate: World
    }
underlyingSchema:
  MyService: |
    type Mutation {
      hello: String
    }

    type Query {
      hello: World
    }

    type World {
      id: ID
      nameChanged: String
    }
query: |
  query OpName {
    hello {
      nameChanged
    }
  }
variables:
  var1: val1
serviceCalls:
  current:
    - serviceName: MyService
      request:
        query: |
          query nadel_2_MyService_OpName {
            hello {
              nameChanged
            }
          }
        variables: {}
        operationName: nadel_2_MyService_OpName
      # language=JSON
      response: |-
        {
          "data": {
            "hello": {
              "nameChanged": "earth"
            }
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: MyService
      request:
        query: |
          query OpName {
            ... on Query {
              hello {
                ... on World {
                  nameChanged
                }
              }
            }
          }
        variables: {}
        operationName: OpName
      # language=JSON
      response: |-
        {
          "data": {
            "hello": {
              "nameChanged": "earth"
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "hello": {
        "nameChanged": "earth"
      }
    },
    "extensions": {}
  }
