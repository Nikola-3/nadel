name: primitive json arguments variables
enabled:
  current: true
  nextgen: true
overallSchema:
  MyService: |
    type Query {
      hello(arg: InputWithJson, arg1: JSON!): String
    }
    
    input InputWithJson {
      payload: JSON 
    }
    
    scalar JSON
underlyingSchema:
  MyService: |-
    type Query {
      hello(arg: InputWithJson, arg1: JSON!): String
    }
    
    input InputWithJson {
      payload: JSON 
    }
    
    scalar JSON
query: |
  query myQuery($var1: JSON!, $var2: JSON!) {
    hello(arg: {payload: $var1}, arg1: $var2)
  }
variables: { var1: "String JSON input", var2: false }
serviceCalls:
  current:
    - serviceName: MyService
      request:
        query: |
          query nadel_2_MyService_myQuery($var1: JSON!, $var2: JSON!) {
            hello(arg: {payload : $var1}, arg1: $var2)
          }
        variables: { var1: "String JSON input", var2: false }
        operationName: nadel_2_MyService_myQuery
      # language=JSON
      response: |-
        {
          "data": {
            "hello": "world"
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: MyService
      request:
        query: |
          query myQuery($var_0: JSON, $var_1: JSON!) {
            hello(arg: {payload : $var_0}, arg1: $var_1)
          }
        variables: { var_0: "String JSON input", var_1: false }
        operationName: myQuery
      # language=JSON
      response: |-
        {
          "data": {
            "hello": "world"
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "hello": "world"
    },
    "extensions": {}
  }
