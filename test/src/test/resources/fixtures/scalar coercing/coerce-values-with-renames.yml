name: coerce values with renames
enabled:
  current: true
  nextgen: true
overallSchema:
  service: |
    type Query {
      aFieldRenamed: Int! @renamed(from: "aField")
    }
underlyingSchema:
  service: |
    type Query {
      aField: String!
    }
query: |
  query {
    aFieldRenamed
  }
variables: {}
serviceCalls:
  current:
    - serviceName: service
      request:
        query: |
          query nadel_2_service {
            aField
          }
        variables: {}
        operationName: nadel_2_service
      # language=JSON
      response: |-
        {
          "data": {
            "aField": "1000"
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: service
      request:
        query: |
          query {
            rename__aFieldRenamed__aField: aField
          }
        variables: {}
      # language=JSON
      response: |-
        {
          "data": {
            "rename__aFieldRenamed__aField": "1000"
          },
          "extensions": {}
        }
# TODO: the returned data is not correct. The field is not being coerced to the overall type. But we'll leave
# like this for now just to maintain the same behaviour for current and nextgen.
# language=JSON
response: |-
  {
    "data": {
      "aFieldRenamed": "1000"
    }
  }
