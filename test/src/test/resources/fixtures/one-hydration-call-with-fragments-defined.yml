name: one hydration call with fragments defined
enabled:
  current: true
  nextgen: true
overallSchema:
  service2: |
    service service2 {
      type Query {
        barById(id: ID): Bar
      }
      type Bar {
        id: ID
        name: String
      }
    }
  service1: |
    service service1 {
      type Query {
        foo(id: ID): Foo
      }
      type Foo {
        id: ID
        bar: Bar => hydrated from service2.barById(id: $source.barId)
        barLongerInput: Bar => hydrated from service2.barById(id: $source.fooDetails.externalBarId)
      }
    }
underlyingSchema:
  service2: |
    type Bar {
      id: ID
      name: String
    }

    type Query {
      barById(id: ID): Bar
    }
  service1: |
    type Foo {
      barId: ID
      fooDetails: FooDetails
      id: ID
    }

    type FooDetails {
      externalBarId: ID
    }

    type Query {
      foo(id: ID): Foo
    }
query: |
  query {
    foo {
      ...frag1
    }
  }

  fragment frag1 on Foo {
    bar {
      id
      name
    }
  }

  # TODO: why does this generate an error?
  # fragment unusedFrag2 on Foo {
  #   bar {
  #     id
  #     name
  #   }
  # }
variables: {}
serviceCalls:
  current:
    - serviceName: service1
      request:
        query: |
          query nadel_2_service1 {
            foo {
              ...frag1
            }
          }

          fragment frag1 on Foo {
            barId
          }
        variables: {}
        operationName: nadel_2_service1
      # language=JSON
      response: |-
        {
          "data": {
            "foo": {
              "barId": "barId"
            }
          },
          "extensions": {}
        }
    - serviceName: service2
      request:
        query: |
          query nadel_2_service2 {
            barById(id: "barId") {
              id
              name
            }
          }
        variables: {}
        operationName: nadel_2_service2
      # language=JSON
      response: |-
        {
          "data": {
            "barById": {
              "id": "barId",
              "name": "Bar1"
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "foo": {
        "bar": {
          "id": "barId",
          "name": "Bar1"
        }
      }
    },
    "extensions": {}
  }
