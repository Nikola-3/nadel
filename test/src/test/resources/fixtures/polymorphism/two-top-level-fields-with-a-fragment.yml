name: two top level fields with a fragment
enabled:
  current: true
  nextgen: true
overallSchema:
  UserService: |
    service UserService {
      type Query {
        user: User
      }
      type User {
        id: ID
        name: String
      }
    }
  Issues: |
    service Issues {
      type Query {
        issues: [Issue]
      }
      type Issue {
        id: ID
      }
    }
underlyingSchema:
  UserService: |
    type Query {
      user: User
    }

    type User {
      id: ID
      name: String
    }
  Issues: |
    type Issue {
      authorId: ID
      id: ID
    }

    type Query {
      issues: [Issue]
    }
query: |
  fragment I on Issue {
    id
  }

  fragment U on User {
    id
    name
  }

  query {
    issues {
      ...I
    }
    user {
      ...U
    }
  }
variables: {}
serviceCalls:
  current:
    - serviceName: Issues
      request:
        query: |
          query nadel_2_Issues {
            issues {
              ...I
            }
          }

          fragment I on Issue {
            id
          }
        variables: {}
        operationName: nadel_2_Issues
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "id": "ISSUE-1"
              },
              {
                "id": "ISSUE-2"
              }
            ]
          },
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query nadel_2_UserService {
            user {
              ...U
            }
          }

          fragment U on User {
            id
            name
          }
        variables: {}
        operationName: nadel_2_UserService
      # language=JSON
      response: |-
        {
          "data": {
            "user": {
              "id": "USER-1",
              "name": "User 1"
            }
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: UserService
      request:
        query: |
          query {
            ... on Query {
              user {
                ... on User {
                  id
                }
                ... on User {
                  name
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "user": {
              "name": "User 1",
              "id": "USER-1"
            }
          },
          "extensions": {}
        }
    - serviceName: Issues
      request:
        query: |
          query {
            ... on Query {
              issues {
                ... on Issue {
                  id
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "id": "ISSUE-1"
              },
              {
                "id": "ISSUE-2"
              }
            ]
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1"
        },
        {
          "id": "ISSUE-2"
        }
      ],
      "user": {
        "id": "USER-1",
        "name": "User 1"
      }
    },
    "extensions": {}
  }
