name: hydration within hydration with variables
enabled:
  current: true
  nextgen: false
overallSchema:
  boards: |
    type Query {
      board: Board
    }

    type Board {
      id: ID
      title: String
      issue: Issue
      @hydrated(service: "issues" field: "issue" arguments : [
          { name : "id", value : "$source.issueId"}
      ])
    }

  issues: |
    type Query {
        issue(id: ID!): Issue
    }

    type Issue {
      id: ID!
      cloudId: ID!

      comments(first: Int = 20) : CommentConnection
        @hydrated(service: "comments" field: "comments" arguments : [
            { name:"cloudId" value:"$source.cloudId"},
            { name:"first" value:"$argument.first"},
        ])
    }

  comments: |
    type Query {
        comments(cloudId: ID!, first: Int): CommentConnection
    }

    type CommentConnection {
        totalCount: Int
    }

underlyingSchema:
  boards: |
    type Query {
      board: Board
    }

    type Board {
      id: ID
      title: String
      issueId: ID!
    }

  issues: |
    type Query {
        issue(id: ID!): Issue
    }

    type Issue {
        id: ID!
        cloudId: ID!
    }

  comments: |
    type Query {
        comments(cloudId: ID!, first: Int): CommentConnection
    }

    type CommentConnection {
        totalCount: Int
    }

query: |
  query($first: Int) {
    board {
      issue {
        comments(first: $first) {
          totalCount
        }
      }
    }
  }
variables: {
  "first": 10
}
serviceCalls:
  current:
    - serviceName: boards
      request:
        query: |
          query nadel_2_boards {
            board {
              issueId
            }
          }
        variables: { }
        operationName: nadel_2_boards
      # language=JSON
      response: |-
        {
          "data": {
            "board": {
              "issueId": "ISSUE-1"
            }
          },
          "extensions": {}
        }
    - serviceName: issues
      request:
        query: |
          query nadel_2_issues {
            issue(id: "ISSUE-1") {
              cloudId
            }
          }
        variables: { }
        operationName: nadel_2_issues
      # language=JSON
      response: |-
        {
          "data": {
            "issue": {
              "cloudId": "CLOUD_ID-1"
            }
          },
          "extensions": {}
        }
    - serviceName: comments
      request:
        query: |
          query nadel_2_comments($first: Int) {
            comments(cloudId: "CLOUD_ID-1", first: $first) {
              totalCount
            }
          }
        variables: { }
        operationName: nadel_2_comments
      # language=JSON
      response: |-
        {
          "data": {
            "comments": {
              "totalCount": 10
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data":
      {
        "board": {
          "issue": {
            "comments": {
              "totalCount":10
            }
          }
        }
      },
  "extensions": {}
  }
