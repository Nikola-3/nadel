name: one synthetic hydration call with longer path arguments and merged fields and
  renamed Type
overallSchema:
  UserService: |
    service UserService {
      type Query {
        usersQuery: RenamedUserQuery
      }
      type RenamedUserQuery => renamed from UserQuery {
        usersByIds(id: [ID]): [RenamedUser]
      }
      type RenamedUser => renamed from User {
        id: ID
        name: String
      }
    }
  Issues: |
    service Issues {
      type Query {
        issues: [Issue]
      }
      type Issue {
        id: ID
        authors: [RenamedUser] => hydrated from UserService.usersQuery.usersByIds(id: $source.authors.authorId) object identified by id, batch size 2
      }
    }
services:
  UserService: |
    type Query {
      usersQuery: UserQuery
    }

    type User {
      id: ID
      name: String
    }

    type UserQuery {
      usersByIds(id: [ID]): [User]
    }
  Issues: |
    type Issue {
      authorIds: [ID]
      authors: [IssueUser]
      id: ID
    }

    type IssueUser {
      authorId: ID
    }

    type Query {
      issues: [Issue]
    }
query: |
  query {
    issues {
      id
      authors {
        name
        id
      }
    }
  }
variables: {}
calls:
  - request:
      query: |
        query nadel_2_Issues {
          issues {
            id
            authors {
              authorId
            }
          }
        }
      variables: {}
      operationName: nadel_2_Issues
    # language=JSON
    response: |-
      {
        "data": {
          "issues": [
            {
              "id": "ISSUE-1",
              "authors": [
                {
                  "authorId": "USER-1"
                },
                {
                  "authorId": "USER-2"
                }
              ]
            }
          ]
        },
        "extensions": {}
      }
  - request:
      query: |
        query nadel_2_UserService {
          usersQuery {
            usersByIds(id: ["USER-1", "USER-2"]) {
              name
              id
              object_identifier__UUID: id
            }
          }
        }
      variables: {}
      operationName: nadel_2_UserService
    # language=JSON
    response: |-
      {
        "data": {
          "usersQuery": {
            "usersByIds": [
              {
                "id": "USER-1",
                "name": "User 1",
                "object_identifier__UUID": "USER-1"
              },
              {
                "id": "USER-2",
                "name": "User 2",
                "object_identifier__UUID": "USER-2"
              }
            ]
          }
        },
        "extensions": {}
      }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authors": [
            {
              "name": "User 1",
              "id": "USER-1"
            },
            {
              "name": "User 2",
              "id": "USER-2"
            }
          ]
        }
      ]
    },
    "extensions": {}
  }
