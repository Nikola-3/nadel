name: repeated hydrated fields on the same level. overlapping fields in the query
enabled:
  current: true
  nextgen: true
overallSchema:
  Foo: |
    service Foo {
      type Query {
        foo: Foo
      }
      type Foo {
        issue: Issue => hydrated from Foo.issue(issueId: $source.issueId)
      }
      type Issue {
        id: ID
        name: String
        desc: String
        summary: String
      }
    }
underlyingSchema:
  Foo: |
    type Foo {
      issueId: ID
    }

    type Issue {
      desc: String
      id: ID
      name: String
      summary: String
    }

    type Query {
      foo: Foo
      issue(issueId: ID): Issue
    }
query: |
  query {
    foo {
      issue {
        name
        summary
      }
      issue {
        desc
        summary
      }
    }
  }
variables: {}
serviceCalls:
  current:
    - serviceName: Foo
      request:
        query: |
          query nadel_2_Foo {
            foo {
              issueId
              issueId
            }
          }
        variables: {}
        operationName: nadel_2_Foo
      # language=JSON
      response: |-
        {
          "data": {
            "foo": {
              "issueId": "ISSUE-1"
            }
          },
          "extensions": {}
        }
    - serviceName: Foo
      request:
        query: |
          query nadel_2_Foo {
            issue(issueId: "ISSUE-1") {
              name
              summary
              desc
              summary
            }
          }
        variables: {}
        operationName: nadel_2_Foo
      # language=JSON
      response: |-
        {
          "data": {
            "issue": {
              "name": "I AM A NAME",
              "desc": "I AM A DESC",
              "summary": "I AM A SUMMARY"
            }
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: Foo
      request:
        query: |
          query {
            foo {
              __typename__hydration__issue: __typename
              hydration__issue__issueId: issueId
            }
          }
        variables: {}
      # language=JSON
      response: |-
        {
          "data": {
            "foo": {
              "hydration__issue__issueId": "ISSUE-1",
              "__typename__hydration__issue": "Foo"
            }
          },
          "extensions": {}
        }
    - serviceName: Foo
      request:
        query: |
          query {
            issue(issueId: "ISSUE-1") {
              desc
              name
              summary
            }
          }
        variables: {}
      # language=JSON
      response: |-
        {
          "data": {
            "issue": {
              "name": "I AM A NAME",
              "summary": "I AM A SUMMARY",
              "desc": "I AM A DESC"
            }
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "foo": {
        "issue": {
          "name": "I AM A NAME",
          "summary": "I AM A SUMMARY",
          "desc": "I AM A DESC"
        }
      }
    },
    "extensions": {}
  }
