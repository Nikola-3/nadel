name: hydration matching using index one batch returns errors
enabled:
  current: true
  nextgen: true
overallSchema:
  UserService: |
    service UserService {
      type Query {
        usersByIds(ids: [ID]): [User]
      }
      type User {
        id: ID
        name: String
      }
    }
  Issues: |
    service Issues {
      type Query {
        issues: [Issue]
      }
      type Issue {
        id: ID
        authors: [User] => hydrated from UserService.usersByIds(ids: $source.authorIds) using indexes, batch size 2
      }
    }
underlyingSchema:
  UserService: |
    type Query {
      usersByIds(ids: [ID]): [User]
    }
    type User {
      id: ID
      name: String
    }
  Issues: |
    type Issue {
      authorIds: [ID]
      id: ID
    }
    type Query {
      issues: [Issue]
    }
query: |
  query {
    issues {
      id
      authors {
        name
      }
    }
  }
variables: {}
serviceCalls:
  current:
    - serviceName: Issues
      request:
        query: |
          query nadel_2_Issues {
            issues {
              id
              authorIds
            }
          }
        variables: {}
        operationName: nadel_2_Issues
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "id": "ISSUE-1",
                "authorIds": [
                  "1"
                ]
              },
              {
                "id": "ISSUE-2",
                "authorIds": [
                  "1",
                  "2"
                ]
              },
              {
                "id": "ISSUE-3",
                "authorIds": [
                  "2",
                  "4"
                ]
              }
            ]
          },
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query nadel_2_UserService {
            usersByIds(ids: ["1", "1"]) {
              name
            }
          }
        variables: {}
        operationName: nadel_2_UserService
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIds": [
              {
                "name": "User-1"
              },
              {
                "name": "User-1"
              }
            ]
          },
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query nadel_2_UserService {
            usersByIds(ids: ["2", "2"]) {
              name
            }
          }
        variables: {}
        operationName: nadel_2_UserService
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIds": null
          },
          "errors": [
            {
              "message": "Fail"
            }
          ],
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query nadel_2_UserService {
            usersByIds(ids: ["4"]) {
              name
            }
          }
        variables: {}
        operationName: nadel_2_UserService
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIds": [
              {
                "name": "User-4"
              }
            ]
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: Issues
      request:
        query: |
          query {
            ... on Query {
              issues {
                ... on Issue {
                  __typename__batch_hydration__authors: __typename
                  batch_hydration__authors__authorIds: authorIds
                  id
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "id": "ISSUE-1",
                "__typename__batch_hydration__authors": "Issue",
                "batch_hydration__authors__authorIds": [
                  "1"
                ]
              },
              {
                "id": "ISSUE-2",
                "__typename__batch_hydration__authors": "Issue",
                "batch_hydration__authors__authorIds": [
                  "1",
                  "2"
                ]
              },
              {
                "id": "ISSUE-3",
                "__typename__batch_hydration__authors": "Issue",
                "batch_hydration__authors__authorIds": [
                  "2",
                  "4"
                ]
              }
            ]
          },
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query {
            ... on Query {
              usersByIds(ids: ["1", "1"]) {
                ... on User {
                  name
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIds": [
              {"name":  "User-1"},
              {"name":  "User-1"}
            ]
          },
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query {
            ... on Query {
              usersByIds(ids: ["2", "2"]) {
                ... on User {
                  name
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIds": null
          },
          "errors": [
            {
              "message": "Fail"
            }
          ],
          "extensions": {}
        }
    - serviceName: UserService
      request:
        query: |
          query {
            ... on Query {
              usersByIds(ids: ["4"]) {
                ... on User {
                  name
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIds": [
              {
                "name": "User-4"
              }
            ]
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authors": [
            {
              "name": "User-1"
            }
          ]
        },
        {
          "id": "ISSUE-2",
          "authors": [
            {
              "name": "User-1"
            },
            null
          ]
        },
        {
          "id": "ISSUE-3",
          "authors": [
            null,
            {
              "name": "User-4"
            }
          ]
        }
      ]
    },
    "errors": [
      {
        "message": "Fail",
        "locations": [],
        "extensions": {
          "classification": "DataFetchingException"
        }
      }
    ]
  }
