name: two deep renames
enabled:
  current: true
  nextgen: true
overallSchema:
  Issues: |
    service Issues {
      type Query {
        issues: [Issue]
      }
      type Issue {
        id: ID
        authorId: ID => renamed from authorDetails.authorId
        authorName: ID => renamed from authorDetails.name
      }
    }
underlyingSchema:
  Issues: |
    type AuthorDetail {
      authorId: ID
      name: String
    }

    type Issue {
      authorDetails: AuthorDetail
      id: ID
    }

    type Query {
      issues: [Issue]
    }
query: |
  query {
    issues {
      id
      authorId
      authorName
    }
  }
variables: {}
serviceCalls:
  current:
    - serviceName: Issues
      request:
        query: |
          query nadel_2_Issues {
            issues {
              id
              authorDetails {
                authorId
              }
              authorDetails {
                name
              }
            }
          }
        variables: {}
        operationName: nadel_2_Issues
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "id": "ISSUE-1",
                "authorDetails": {
                  "authorId": "USER-1",
                  "name": "User 1"
                }
              },
              {
                "id": "ISSUE-2",
                "authorDetails": {
                  "authorId": "USER-2",
                  "name": "User 2"
                }
              }
            ]
          },
          "extensions": {}
        }
  nextgen:
    - serviceName: Issues
      request:
        query: |
          query {
            ... on Query {
              issues {
                ... on Issue {
                  __typename__deep_rename__authorId: __typename
                  __typename__deep_rename__authorName: __typename
                  deep_rename__authorId__authorDetails: authorDetails {
                    ... on AuthorDetail {
                      authorId
                    }
                  }
                  deep_rename__authorName__authorDetails: authorDetails {
                    ... on AuthorDetail {
                      name
                    }
                  }
                  id
                }
              }
            }
          }
        variables: {}
        operationName: null
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "deep_rename__authorId__authorDetails": {
                  "authorId": "USER-1"
                },
                "__typename__deep_rename__authorId": "Issue",
                "id": "ISSUE-1",
                "__typename__deep_rename__authorName": "Issue",
                "deep_rename__authorName__authorDetails": {
                  "name": "User 1"
                }
              },
              {
                "deep_rename__authorId__authorDetails": {
                  "authorId": "USER-2"
                },
                "__typename__deep_rename__authorId": "Issue",
                "id": "ISSUE-2",
                "__typename__deep_rename__authorName": "Issue",
                "deep_rename__authorName__authorDetails": {
                  "name": "User 2"
                }
              }
            ]
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authorId": "USER-1",
          "authorName": "User 1"
        },
        {
          "id": "ISSUE-2",
          "authorId": "USER-2",
          "authorName": "User 2"
        }
      ]
    },
    "extensions": {}
  }
