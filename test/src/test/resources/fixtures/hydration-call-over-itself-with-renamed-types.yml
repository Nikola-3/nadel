name: hydration call over itself with renamed types
overallSchema:
  testing: |
    service testing {
      type Query {
        testing: Testing
      }
      type Testing {
        movies: [TestingMovie]
      }
      type TestingCharacter => renamed from Character  {
        id: ID!
        name: String
      }
      type TestingMovie => renamed from Movie {
        id: ID!
        name: String
        characters: [TestingCharacter] => hydrated from testing.characters(ids: $source.characterIds) object identified by id, batch size  3
      }
    }
services:
  testing: |
    type Character {
      id: ID!
      name: String
    }

    type Movie {
      characterIds: [ID]
      id: ID!
      name: String
    }

    type Query {
      characters(ids: [ID!]!): [Character]
      testing: Testing
    }

    type Testing {
      movies: [Movie]
    }
query: |
  query {
    testing {
      movies {
        id
        name
        characters {
          id
          name
        }
        ...F1
      }
    }
  }

  fragment F1 on TestingMovie {
    name
  }
variables: {}
calls:
  current:
    - request:
        query: |
          query nadel_2_testing {
            testing {
              movies {
                id
                name
                characterIds
                ...F1
              }
            }
          }

          fragment F1 on Movie {
            name
          }
        variables: {}
        operationName: nadel_2_testing
      # language=JSON
      response: |-
        {
          "data": {
            "testing": {
              "movies": [
                {
                  "id": "M1",
                  "name": "Movie 1",
                  "characterIds": [
                    "C1",
                    "C2"
                  ]
                },
                {
                  "id": "M2",
                  "name": "Movie 2",
                  "characterIds": [
                    "C1",
                    "C2",
                    "C3"
                  ]
                }
              ]
            }
          },
          "extensions": {}
        }
    - request:
        query: |
          query nadel_2_testing {
            characters(ids: ["C1", "C2", "C1"]) {
              id
              name
              object_identifier__UUID: id
            }
          }
        variables: {}
        operationName: nadel_2_testing
      # language=JSON
      response: |-
        {
          "data": {
            "characters": [
              {
                "id": "C1",
                "name": "Luke",
                "object_identifier__UUID": "C1"
              },
              {
                "id": "C2",
                "name": "Leia",
                "object_identifier__UUID": "C2"
              },
              {
                "id": "C1",
                "name": "Luke",
                "object_identifier__UUID": "C1"
              }
            ]
          },
          "extensions": {}
        }
    - request:
        query: |
          query nadel_2_testing {
            characters(ids: ["C2", "C3"]) {
              id
              name
              object_identifier__UUID: id
            }
          }
        variables: {}
        operationName: nadel_2_testing
      # language=JSON
      response: |-
        {
          "data": {
            "characters": [
              {
                "id": "C2",
                "name": "Leia",
                "object_identifier__UUID": "C2"
              },
              {
                "id": "C3",
                "name": "Anakin",
                "object_identifier__UUID": "C3"
              }
            ]
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "testing": {
        "movies": [
          {
            "id": "M1",
            "name": "Movie 1",
            "characters": [
              {
                "id": "C1",
                "name": "Luke"
              },
              {
                "id": "C2",
                "name": "Leia"
              }
            ]
          },
          {
            "id": "M2",
            "name": "Movie 2",
            "characters": [
              {
                "id": "C1",
                "name": "Luke"
              },
              {
                "id": "C2",
                "name": "Leia"
              },
              {
                "id": "C3",
                "name": "Anakin"
              }
            ]
          }
        ]
      }
    },
    "extensions": {}
  }
