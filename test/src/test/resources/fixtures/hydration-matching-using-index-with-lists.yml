name: hydration matching using index with lists
overallSchema:
  UserService: |
    service UserService {
      type Query {
        usersByIssueIds(issueIds: [ID]): [[User]]
      }
      type User {
        id: ID
        name: String
      }
    }
  Issues: |
    service Issues {
      type Query {
        issues: [Issue]
      }
      type Issue {
        id: ID
        authors: [User] => hydrated from UserService.usersByIssueIds(issueIds: $source.id) using indexes, batch size 5
      }
    }
services:
  UserService: |
    type Query {
      usersByIssueIds(issueIds: [ID]): [[User]]
    }

    type User {
      id: ID
      name: String
    }
  Issues: |
    type Issue {
      id: ID
    }

    type Query {
      issues: [Issue]
    }
query: |
  query {
    issues {
      id
      authors {
        name
      }
    }
  }
variables: {}
calls:
  current:
    - request:
        query: |
          query nadel_2_Issues {
            issues {
              id
              id
            }
          }
        variables: {}
        operationName: nadel_2_Issues
      # language=JSON
      response: |-
        {
          "data": {
            "issues": [
              {
                "id": "ISSUE-1"
              },
              {
                "id": "ISSUE-2"
              }
            ]
          },
          "extensions": {}
        }
    - request:
        query: |
          query nadel_2_UserService {
            usersByIssueIds(issueIds: ["ISSUE-1", "ISSUE-2"]) {
              name
            }
          }
        variables: {}
        operationName: nadel_2_UserService
      # language=JSON
      response: |-
        {
          "data": {
            "usersByIssueIds": [
              [
                {
                  "name": "Name"
                }
              ],
              [
                {
                  "name": "Name"
                },
                {
                  "name": "Name 2"
                }
              ]
            ]
          },
          "extensions": {}
        }
# language=JSON
response: |-
  {
    "data": {
      "issues": [
        {
          "id": "ISSUE-1",
          "authors": [
            {
              "name": "Name"
            }
          ]
        },
        {
          "id": "ISSUE-2",
          "authors": [
            {
              "name": "Name"
            },
            {
              "name": "Name 2"
            }
          ]
        }
      ]
    },
    "extensions": {}
  }
